// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30)
// swift-module-flags: -target armv7-apple-ios9.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name LinkedinAudienceNetwork
import Foundation
@_exported import LinkedinAudienceNetwork
import Swift
import _Concurrency
@objc(LILogVerbosityConfiguration) public enum LogVerbosityConfiguration : Swift.Int, Swift.CaseIterable, Swift.CustomStringConvertible {
  case none
  case errors
  case all
  public var description: Swift.String {
    get
  }
  public init?(rawValue: Swift.Int)
  public typealias AllCases = [LinkedinAudienceNetwork.LogVerbosityConfiguration]
  public typealias RawValue = Swift.Int
  public static var allCases: [LinkedinAudienceNetwork.LogVerbosityConfiguration] {
    get
  }
  public var rawValue: Swift.Int {
    get
  }
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc(LIAudienceNetwork) @objcMembers public class AudienceNetwork : ObjectiveC.NSObject {
  @objc public static var bidderToken: Swift.String {
    @objc get
  }
  @objc public static var sdkVersion: Swift.String {
    @objc get
  }
  @objc(startWithKey:completion:) public static func start(with key: Swift.String, completion: ((Swift.Error?) -> Swift.Void)?)
  @objc(startWithConfiguration:completion:) public static func start(with configuration: LinkedinAudienceNetwork.AudienceNetworkConfiguration, completion: ((Swift.Error?) -> Swift.Void)?)
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc(LIAudienceNetworkConfiguration) @objcMembers public class AudienceNetworkConfiguration : ObjectiveC.NSObject {
  @objc public var logVerbosity: LinkedinAudienceNetwork.LogVerbosityConfiguration
  @objc public var diagnosticDataCollectionEnabled: Swift.Bool
  @objc public init(key: Swift.String)
  @objc deinit
}
extension LinkedinAudienceNetwork.LogVerbosityConfiguration : Swift.Equatable {}
extension LinkedinAudienceNetwork.LogVerbosityConfiguration : Swift.Hashable {}
extension LinkedinAudienceNetwork.LogVerbosityConfiguration : Swift.RawRepresentable {}
